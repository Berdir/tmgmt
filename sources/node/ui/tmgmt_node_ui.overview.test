<?php

/**
 * Content Overview Tests
 */
class TMGMTNodeSourceUIOverviewTestCase extends TMGMTBaseTestCase {

  /**
   * Implements getInfo().
   */
  static function getInfo() {
    return array(
      'name' => t('Node Source UI Overview tests'),
      'description' => t('Tests the user interface for node overviews.'),
      'group' => t('Translation Management'),
      'dependencies' => array('rules'),
    );
  }

  /**
   * Overrides SimplenewsTestCase::setUp()
   */
  function setUp() {
    parent::setUp(array('tmgmt_node_ui'));
    variable_set('language_content_type_page', TRANSLATION_ENABLED);

    $this->loginAsAdmin();

    $this->setEnvironment('de');
    $this->setEnvironment('fr');
    $this->setEnvironment('es');
    $this->setEnvironment('el');

    // Copied from standard.install
    $type = array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    );
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
    node_types_rebuild();

    $this->checkPermissions(array(), TRUE);

    // Allow auto-accept.
    $default_translator = tmgmt_translator_load('test_translator');
    $default_translator->settings = array(
      'auto_accept' => TRUE,
    );
    $default_translator->save();
  }

  /**
   * Tests translating through the content source overview.
   */
  function testNodeSourceOverview() {

    // Login as translator to translate nodes.
    $this->loginAsTranslator(array(
      'translate content',
      'edit any page content',
      'create page content',
    ));

    // Create a bunch of english nodes.
    $node1 = $this->drupalCreateNode(array('type' => 'page', 'language' => 'en', 'body' => array('en' => array(array()))));
    $node2 = $this->drupalCreateNode(array('type' => 'page', 'language' => 'en', 'body' => array('en' => array(array()))));
    $node3 = $this->drupalCreateNode(array('type' => 'page', 'language' => 'en', 'body' => array('en' => array(array()))));
    $node4 = $this->drupalCreateNode(array('type' => 'page', 'language' => 'en', 'body' => array('en' => array(array()))));

    // Go to the overview page and make sure the nodes are there.
    $this->drupalGet('admin/config/regional/tmgmt/node');

    $this->assertText($node1->title);
    $this->assertText($node2->title);
    $this->assertText($node3->title);
    $this->assertText($node4->title);

    // Now translate them.
    $edit = array(
      'views_bulk_operations[0]' => TRUE,
      'views_bulk_operations[1]' => TRUE,
      'views_bulk_operations[2]' => TRUE,
    );
    $this->drupalPost(NULL, $edit, t('Request translations'));

    // Some assertions on the submit form.
    $this->assertText(t('@title and 2 more (English to ?, Unprocessed)', array('@title' => $node1->title)));
    $this->assertText(t('Translation for @title', array('@title' => $node1->title)));
    $this->assertText(t('Translation for @title', array('@title' => $node2->title)));
    $this->assertText(t('Translation for @title', array('@title' => $node3->title)));
    $this->assertNoText(t('Translation for @title', array('@title' => $node4->title)));

    // Translate
    $edit = array(
      'target_language' => 'de',
    );
    $this->drupalPost(NULL, $edit, t('Submit to translator'));
    $this->assertNoText(t('The translation of @title to @language is finished and can now be reviewed.', array('@title' => $node1->title, '@language' => t('German'))));
    $this->assertText(t('The translation for @title has been accepted.', array('@title' => $node1->title)));
    $this->assertNoText(t('The translation of @title to @language is finished and can now be reviewed.', array('@title' => $node2->title, '@language' => t('German'))));
    $this->assertText(t('The translation for @title has been accepted.', array('@title' => $node1->title)));
    $this->assertNoText(t('The translation of @title to @language is finished and can now be reviewed.', array('@title' => $node3->title, '@language' => t('German'))));
    $this->assertText(t('The translation for @title has been accepted.', array('@title' => $node1->title)));

    // Check the translated node.
    $this->clickLink($node1->title);
    $this->clickLink(t('Translate'));
    $this->assertText('de_' . $node1->title);
  }
}

