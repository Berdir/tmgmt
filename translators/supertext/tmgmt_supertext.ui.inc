<?php

/**
 * @file
 * Provides the Supertext translation plugin controller.
 */

/**
 * Supertext translator plugin controller.
 */
class TMGMTSupertextTranslatorUIController extends TMGMTDefaultTranslatorUIController {

	
  /**
   * Overrides TMGMTDefaultTranslatorUIController::settingsForm().
   */
  public function pluginSettingsForm($form, &$form_state, TMGMTTranslator $translator, $busy = FALSE) {
  watchdog('supertext', 'Job', null);
  	$plugin = tmgmt_translator_plugin_controller($this->pluginType);
  	
    $form['api_username'] = array(
      '#type' => 'textfield',
      '#title' => t('Supertext email'),
      '#default_value' => $translator->getSetting('api_username', ''),
      '#description' => t('Please enter the email address of your Supertext account. If you don\'t have an account yet, just provide your default email.'),
    );
    $form['api_token'] = array(
      '#type' => 'textfield',
      '#title' => t('Supertext API Token'),
      '#default_value' => $translator->getSetting('api_token', ''),
      '#description' => t('Please enter your API Token (You can get it from your !link). Or leave it empty if you just want a quote.', array('!link' => l(t('Supertext Account'),'https://www.supertext.ch/customer/accountsettings.aspx'))),
    
    );
    $form['currency'] = array(
      '#type' => 'select',
      '#title' => t('Your default currency'),
      '#options' => array(
             'EUR' => t('Euro'),
             'CHF' => t('Swiss Franc'),
           ),
      '#default_value' => $translator->getSetting('currency', ''),
      '#description' => t('In what currency do you wanna see the prices.'),
    );            
    //map drupal languages to languages that supertext can translate
    //e.g. DE -> DE-CH
    //TODO only make requests if nothing is set and add some caching
    $languages = language_list();    
    foreach ($languages as $language) {
    	//dpm($language);
    	$mapping = $plugin->getMappedLanguages($language->language);    	
      $form['language_mapping_'.$language->language] = array(
        '#type' => 'select',
        '#title' => t('Select your mapping for '.$language->name),
        '#options' => $mapping,
        '#default_value' => $translator->getSetting('language_mapping_'.$language->language, ''),
        '#description' => t('We need a more exact definition of '.$language->name.'. There are different versions of it.'),
      );       	
    }        
    $form['use_sandbox'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use Sandbox'),
      '#default_value' => $translator->getSetting('use_sandbox', TRUE),
    );
    return parent::pluginSettingsForm($form, $form_state, $translator, $busy);
  }

  /**
   * Overrides TMGMTDefaultTranslatorUIController::checkoutSettingsForm().
   */
  public function checkoutSettingsForm($form, &$form_state, TMGMTJob $job) {
    $plugin = tmgmt_translator_plugin_controller($this->pluginType);
    $object = $plugin->generateSupertextOrderObject($job);
    $response = $plugin->supertextHttpRequest('/translation/quote', $object, $job->getTranslator());
    if ($response->code == "200") {
      $responsedata = json_decode($response->data);
      $settings['supertext-job'] = array(
        '#type' => 'value',
      );
      $settings['job-label'] = array(
        '#type' => 'textfield',
        '#title' => t('Job Title'),
        '#default_value' => $job->label,
        '#size' => 60,
        '#maxlength' => 128,
      );
      if (isset($responsedata->Options)) {
      	$defaultRadio = TRUE;
        foreach ($responsedata->Options as $option_item) {
          $settings[$option_item->OrderTypeId . "_markup"] = array(
            '#type' => 'item',
            '#title' => $option_item->Name,
            '#markup' => $option_item->Description,
          );
          foreach ($option_item->DeliveryOptions as $delivery_key => $delivery_item) {
            $name = format_date(strtotime($delivery_item->DeliveryDate)) . ', Price ' . $delivery_item->Price . " ". $responsedata->Currency;
            $settings[$option_item->OrderTypeId .":" .$delivery_item->DeliveryId] = array(
              '#type' => 'radio',
              '#title' => $name,
              '#return_value' => $option_item->OrderTypeId .":" .$delivery_item->DeliveryId,
              '#default_value' => $defaultRadio,
              '#attributes' => array('name' => array('settings[supertext-job]')),
            );
            //Just set the first option to true, whatever it is
            $defaultRadio = FALSE;
          }
        }
      }
      return $settings;
    }
    else {
      $job->addMessage("Could not get quote from Supertext. Response: @response",array('@response'=>$response->data));
      drupal_set_message(t("Could not get quote from Supertext. Error: @error",array('@error' => $response->error)),'error');
    }
  }
}
