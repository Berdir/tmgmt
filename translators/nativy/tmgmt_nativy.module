<?php

/**
 * @file
 * Provides functions for translation provider nativy.com.
 */

/**
 * Implements hook_menu().
 */
function tmgmt_nativy_menu() {
  $items['tmgmt/nativy/callback/%tmgmt_job'] = array(
    'title' => 'Nativy Notification',
    'description' => 'Callback for the completion notification of a translation job.',
    'type' => MENU_CALLBACK,
    'page callback' => 'tmgmt_nativy_process_callback',
    'page arguments' => array(3),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_tmgmt_translator_plugin_info().
 */
function tmgmt_nativy_tmgmt_translator_plugin_info() {
  return array(
    'nativy' => array(
      'label' => t('Nativy translator'),
      'description' => t('Nativy translator plugin that returns translations from nativy.com.'),
      'plugin controller class' => 'TMGMTNativyTranslatorPluginController',
      'ui controller class' => 'TMGMTNativyTranslatorUIController',
    ),
  );
}

/**
 * Callback page.
 *
 * @TODO Real processing. For now we just log whatever comes in.
 */
function tmgmt_nativy_process_callback(TMGMTJob $job) {
  $controller = $job->getTranslatorController();
  if (!($controller instanceof TMGMTNativyTranslatorPluginController)) {
    $job->addMessage('Job does not belong to nativy.', array(), 'error');
    return;
  }

  // Verify the validity of this request.
  if (!empty($_GET['timestamp']) && !empty($_GET['api_sign'])) {
    if (!$controller->verify($job->getTranslator(), $_GET['timestamp'], $_GET['api_sign'])) {
      $job->addMessage('Callback request has invalid api sign', array(), 'error');
      return;
    }
  }
  else {
    $job->addMessage('Callback request is missing api sign.', array(), 'error');
    return;
  }

  // Record payment success message.
  if (!empty($_GET['paid']) && $_GET['paid']) {
    $job->addMessage('Payment successfully recorded.');
    return;
  }

  if ($controller->retrieveTranslation($job)) {
    $job->addMessage('Successfully retrieved translation.');
  }
  else {
    $job->addMessage('Failed to retrieve the translation.', 'warning');
  }
}

/**
 * Save the chosen job settings.
 */
function tmgmt_nativy_job_settings_submit($form, &$form_state) {
  $job = $form_state['tmgmt_job'];
  $job = entity_ui_form_submit_build_entity($form, $form_state);
  dpm($job);
  $job->save();
}